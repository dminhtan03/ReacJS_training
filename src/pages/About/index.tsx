// ===== ABOUT PAGE COMPONENT =====

import React from "react";
import {
  Card,
  Typography,
  Row,
  Col,
  Collapse,
  Tag,
  List,
  Avatar,
  Timeline,
  Descriptions,
  Divider,
  Space,
} from "antd";
import {
  CodeOutlined,
  DatabaseOutlined,
  GlobalOutlined,
  ToolOutlined,
  TeamOutlined,
  CheckCircleOutlined,
} from "@ant-design/icons";

const { Title, Paragraph, Text } = Typography;
const { Panel } = Collapse;

// Tech stack data
const techStack = [
  {
    category: "Frontend Framework",
    icon: <CodeOutlined />,
    color: "blue",
    technologies: [
      {
        name: "React 18",
        description: "UI library v·ªõi hooks v√† concurrent features",
      },
      {
        name: "TypeScript",
        description: "Static type checking cho JavaScript",
      },
      { name: "Vite", description: "Build tool nhanh v√† hi·ªán ƒë·∫°i" },
    ],
  },
  {
    category: "UI & Styling",
    icon: <ToolOutlined />,
    color: "green",
    technologies: [
      {
        name: "Ant Design",
        description: "UI component library enterprise-ready",
      },
      { name: "TailwindCSS", description: "Utility-first CSS framework" },
    ],
  },
  {
    category: "State Management",
    icon: <DatabaseOutlined />,
    color: "purple",
    technologies: [
      {
        name: "Redux Toolkit",
        description: "Modern Redux v·ªõi less boilerplate",
      },
      { name: "React Redux", description: "Official React bindings cho Redux" },
    ],
  },
  {
    category: "Routing & API",
    icon: <GlobalOutlined />,
    color: "orange",
    technologies: [
      { name: "React Router", description: "Declarative routing cho React" },
      { name: "Axios", description: "HTTP client v·ªõi interceptors" },
      { name: "WebSocket", description: "Real-time communication" },
    ],
  },
];

// Project structure data
const projectStructure = [
  {
    path: "src/components/",
    description: "Reusable UI components",
    children: ["Layout/", "common/", "ui/"],
  },
  {
    path: "src/pages/",
    description: "Page components",
    children: ["Home/", "About/", "Dashboard/"],
  },
  {
    path: "src/hooks/",
    description: "Custom React hooks",
    children: ["useApi.ts", "useWebSocket.ts", "useLocalStorage.ts"],
  },
  {
    path: "src/store/",
    description: "Redux store v√† slices",
    children: ["slices/", "store.ts", "index.ts"],
  },
  {
    path: "src/services/",
    description: "API services",
    children: ["api.ts", "demoApi.ts"],
  },
  {
    path: "src/utils/",
    description: "Utility functions",
    children: ["helpers.ts", "errorHandlers.ts"],
  },
];

// Features list
const features = [
  "Redux Toolkit cho state management",
  "TypeScript support ƒë·∫ßy ƒë·ªß",
  "React Router cho navigation",
  "Axios v·ªõi error handling",
  "WebSocket cho real-time updates",
  "Custom hooks cho reusability",
  "Ant Design components",
  "TailwindCSS utilities",
  "Error boundaries",
  "Loading states",
  "Responsive design",
  "Dark/Light theme support",
];

// Development timeline
const timeline = [
  {
    label: "Setup Project",
    children: "Kh·ªüi t·∫°o Vite project v·ªõi React TypeScript template",
    color: "blue",
  },
  {
    label: "Install Dependencies",
    children: "C√†i ƒë·∫∑t Redux, Router, Ant Design, TailwindCSS, Axios",
    color: "green",
  },
  {
    label: "Create Architecture",
    children: "Thi·∫øt l·∫≠p c·∫•u tr√∫c th∆∞ m·ª•c v√† base components",
    color: "purple",
  },
  {
    label: "Implement Features",
    children: "Redux store, API services, WebSocket, custom hooks",
    color: "orange",
  },
  {
    label: "Demo Pages",
    children: "T·∫°o c√°c page demo v·ªõi ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng",
    color: "red",
  },
];

// About page component
const AboutPage: React.FC = () => {
  return (
    <div className="fade-in">
      {/* Header */}
      <div className="text-center mb-8">
        <Title level={1}>üìñ V·ªÅ React Base Project</Title>
        <Paragraph className="text-lg text-gray-600 max-w-4xl mx-auto">
          ƒê√¢y l√† m·ªôt base project React ho√†n ch·ªânh ƒë∆∞·ª£c thi·∫øt k·∫ø d√†nh cho
          Fresher. Project t√≠ch h·ª£p ƒë·∫ßy ƒë·ªß c√°c c√¥ng ngh·ªá hi·ªán ƒë·∫°i v√† best
          practices c·ªßa React ecosystem.
        </Paragraph>
      </div>

      {/* Project Info */}
      <Row gutter={[16, 16]} className="mb-8">
        <Col xs={24} lg={16}>
          <Card title="üéØ M·ª•c ti√™u Project">
            <List
              dataSource={[
                "Cung c·∫•p base code ch·∫•t l∆∞·ª£ng cao cho Fresher",
                "Demo c√°c pattern v√† best practices",
                "T√≠ch h·ª£p ƒë·∫ßy ƒë·ªß tech stack hi·ªán ƒë·∫°i",
                "Code c√≥ comment ti·∫øng Vi·ªát d·ªÖ hi·ªÉu",
                "C·∫•u tr√∫c r√µ r√†ng, d·ªÖ m·ªü r·ªông",
              ]}
              renderItem={(item) => (
                <List.Item>
                  <CheckCircleOutlined className="text-green-500 mr-2" />
                  {item}
                </List.Item>
              )}
            />
          </Card>
        </Col>
        <Col xs={24} lg={8}>
          <Card title="üìä Project Stats">
            <Descriptions column={1}>
              <Descriptions.Item label="Version">1.0.0</Descriptions.Item>
              <Descriptions.Item label="React">18.x</Descriptions.Item>
              <Descriptions.Item label="TypeScript">5.x</Descriptions.Item>
              <Descriptions.Item label="Build Tool">Vite</Descriptions.Item>
              <Descriptions.Item label="License">MIT</Descriptions.Item>
            </Descriptions>
          </Card>
        </Col>
      </Row>

      {/* Tech Stack */}
      <Card title="üõ†Ô∏è Tech Stack" className="mb-8">
        <Row gutter={[16, 16]}>
          {techStack.map((category, index) => (
            <Col xs={24} lg={12} xl={6} key={index}>
              <Card
                size="small"
                title={
                  <Space>
                    {category.icon}
                    <Text strong>{category.category}</Text>
                  </Space>
                }
              >
                <List
                  dataSource={category.technologies}
                  renderItem={(tech) => (
                    <List.Item>
                      <List.Item.Meta
                        avatar={
                          <Avatar
                            size="small"
                            style={{
                              backgroundColor: `var(--ant-color-${category.color})`,
                            }}
                          >
                            {tech.name.charAt(0)}
                          </Avatar>
                        }
                        title={
                          <Text strong className="text-sm">
                            {tech.name}
                          </Text>
                        }
                        description={
                          <Text className="text-xs">{tech.description}</Text>
                        }
                      />
                    </List.Item>
                  )}
                />
              </Card>
            </Col>
          ))}
        </Row>
      </Card>

      {/* Features */}
      <Row gutter={[16, 16]} className="mb-8">
        <Col xs={24} lg={12}>
          <Card title="‚ú® T√≠nh nƒÉng ch√≠nh">
            <List
              grid={{ gutter: 8, xs: 1, sm: 2 }}
              dataSource={features}
              renderItem={(feature) => (
                <List.Item>
                  <Tag color="blue" className="w-full text-center">
                    {feature}
                  </Tag>
                </List.Item>
              )}
            />
          </Card>
        </Col>
        <Col xs={24} lg={12}>
          <Card title="üìÅ C·∫•u tr√∫c Project">
            <Collapse ghost>
              {projectStructure.map((folder, index) => (
                <Panel
                  header={
                    <Space>
                      <CodeOutlined />
                      <Text strong>{folder.path}</Text>
                    </Space>
                  }
                  key={index}
                >
                  <Paragraph className="text-gray-600 mb-2">
                    {folder.description}
                  </Paragraph>
                  {folder.children && (
                    <List
                      size="small"
                      dataSource={folder.children}
                      renderItem={(child) => (
                        <List.Item>
                          <Text code className="text-xs">
                            {child}
                          </Text>
                        </List.Item>
                      )}
                    />
                  )}
                </Panel>
              ))}
            </Collapse>
          </Card>
        </Col>
      </Row>

      {/* Development Timeline */}
      <Card title="‚è±Ô∏è Timeline Ph√°t tri·ªÉn" className="mb-8">
        <Timeline items={timeline} mode="left" />
      </Card>

      {/* Getting Started */}
      <Card title="üöÄ H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng">
        <Row gutter={[16, 16]}>
          <Col xs={24} lg={8}>
            <Card size="small" title="1. Clone & Install">
              <Paragraph>
                <Text code>git clone [repo]</Text>
                <br />
                <Text code>npm install</Text>
                <br />
                <Text code>npm run dev</Text>
              </Paragraph>
            </Card>
          </Col>
          <Col xs={24} lg={8}>
            <Card size="small" title="2. Explore Features">
              <Paragraph>
                ‚Ä¢ Ki·ªÉm tra Redux DevTools
                <br />
                ‚Ä¢ Test API calls ·ªü Network tab
                <br />‚Ä¢ Th·ª≠ WebSocket ·ªü Dashboard
              </Paragraph>
            </Card>
          </Col>
          <Col xs={24} lg={8}>
            <Card size="small" title="3. Customize">
              <Paragraph>
                ‚Ä¢ Th√™m pages m·ªõi v√†o /pages
                <br />
                ‚Ä¢ T·∫°o slices cho state m·ªõi
                <br />‚Ä¢ Develop API services ri√™ng
              </Paragraph>
            </Card>
          </Col>
        </Row>
      </Card>

      {/* Footer */}
      <div className="text-center mt-8">
        <Divider />
        <Paragraph className="text-gray-600">
          <TeamOutlined className="mr-2" />
          ƒê∆∞·ª£c ph√°t tri·ªÉn v·ªõi ‚ù§Ô∏è cho Fresher developers. Ch√∫c c√°c b·∫°n h·ªçc t·∫≠p v√†
          ph√°t tri·ªÉn t·ªët!
        </Paragraph>
      </div>
    </div>
  );
};

export default AboutPage;
